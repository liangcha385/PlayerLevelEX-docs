import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as s,c as d,f as u,a as e,d as l,w as o,e as r,b as t}from"./app-62B9wZ_M.js";const i={},v=e("p",null,"此处列举 PlayerLevelEX 所用的命令",-1),h={class:"table-of-contents"},b=r('<div class="hint-container caution"><p class="hint-container-title">关于玩家选择</p><p>命令无法选择离线的玩家</p></div><div class="hint-container tip"><p class="hint-container-title">关于参数</p><p>[args] 代表必填参数 &lt;args&gt;代表可填参数</p></div><h2 id="playerlevel" tabindex="-1"><a class="header-anchor" href="#playerlevel" aria-hidden="true">#</a> playerlevel</h2><p><strong>用法</strong></p><blockquote><p>/playerlevel</p></blockquote><p><strong>别称</strong></p><blockquote><p>/exp /level</p></blockquote><p>插件主命令</p><h2 id="playerlevel-exp" tabindex="-1"><a class="header-anchor" href="#playerlevel-exp" aria-hidden="true">#</a> playerlevel exp</h2><p><strong>用法</strong></p><blockquote><p>/playerlevel exp add/remove/set [玩家名称] [数值]<br> /playerlevel exp check [玩家名称]</p></blockquote><p><strong>别称</strong></p><blockquote><p>/exp /level</p></blockquote><p>给予/移除/设置玩家指定数值的经验<br> 查询玩家经验</p><h2 id="playerlevel-level" tabindex="-1"><a class="header-anchor" href="#playerlevel-level" aria-hidden="true">#</a> playerlevel level</h2><p><strong>用法</strong></p><blockquote><p>/playerlevel exp add/remove/set [玩家名称] [数值]<br> /playerlevel exp check [玩家名称]</p></blockquote><p><strong>别称</strong></p><blockquote><p>/exp /level</p></blockquote><p>给予/移除/设置玩家指定数值的等级<br> 查询玩家等级</p><h2 id="playerlevel-debug" tabindex="-1"><a class="header-anchor" href="#playerlevel-debug" aria-hidden="true">#</a> playerlevel debug</h2><p><strong>用法</strong></p><blockquote><p>/playerlevel debug<br> /playerlevel debug dependencies</p></blockquote>',23),_=e("blockquote",null,[e("p",null,"/playerlevel debug template levelConfig addLevel [从多少级开始] [到多少级结束] [等级名称] [升级所需经验]")],-1),m=e("p",null,[e("strong",null,"别称")],-1),g=e("blockquote",null,[e("p",null,"/exp /level")],-1),y=e("p",null,[t("插件自检"),e("br"),e("em",null,"dependencies"),t(" 参数可检查插件所需前置")],-1),x=r(`<p>2.1.4版本追加了一个功能：快捷配置模板命令<br> 有一点点的小复杂，最好自己有个专门服务器试试去</p><p>比如我这样写</p><div class="language-mcfunction line-numbers-mode" data-ext="mcfunction"><pre class="language-mcfunction"><code>/playerlevel debug template levelConfig addLevel 0 10 &amp;8Lv.#&amp;b{0} math#10#*#{0}#+#1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>0 代表从0级开始 10 代表从10级结束 &amp;8Lv.#&amp;b{0} 就是每个等级的文本**{0}**替换为当前等级显示的数字，比如当我为3级时，这里的 &amp;8Lv.#&amp;b{0} 会解析为 &amp;8Lv.#&amp;b3 输出 math#10#*#{0}#+#1 此处为kether公式，意思为 math 10 * 等级 + 1 来执行，当等级是10时，返回值为101，10级升级所需经验就是101。 当然你要是嫌麻烦可以直接填int值上去</p></blockquote><h2 id="playerlevel-levelup" tabindex="-1"><a class="header-anchor" href="#playerlevel-levelup" aria-hidden="true">#</a> playerlevel levelup</h2>`,5),k=e("p",null,[e("strong",null,"用法")],-1),f=e("blockquote",null,[e("p",null,"/playerlevel levelup")],-1),q=e("p",null,[e("strong",null,"别称")],-1),L=e("blockquote",null,[e("p",null,"/exp /level")],-1),B=e("p",null,"消耗经验值进行升级",-1);function C(N,V){const a=n("router-link"),p=n("Badge");return s(),d("div",null,[v,u(" more "),e("nav",h,[e("ul",null,[e("li",null,[l(a,{to:"#playerlevel"},{default:o(()=>[t("playerlevel")]),_:1})]),e("li",null,[l(a,{to:"#playerlevel-exp"},{default:o(()=>[t("playerlevel exp")]),_:1})]),e("li",null,[l(a,{to:"#playerlevel-level"},{default:o(()=>[t("playerlevel level")]),_:1})]),e("li",null,[l(a,{to:"#playerlevel-debug"},{default:o(()=>[t("playerlevel debug")]),_:1})]),e("li",null,[l(a,{to:"#playerlevel-levelup"},{default:o(()=>[t("playerlevel levelup")]),_:1})])])]),b,l(p,{text:">=2.1.4",color:"#242378"}),_,m,g,y,l(p,{text:">=2.1.4",color:"#242378"}),x,l(p,{text:"玩家",color:"#242378"}),k,f,q,L,B])}const P=c(i,[["render",C],["__file","command.html.vue"]]);export{P as default};
